// Manifest version information!
def versionMajor = 1
def versionMinor = 3
def versionPatch = 0
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: 'variants.gradle'

def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

android {
    compileSdkVersion compileSdk
    defaultConfig {
        applicationId "co.kyald.coronavirustracking"

        minSdkVersion minSdk
        targetSdkVersion targetSdk

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
        exclude 'META-INF/main.kotlin_module'
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    dexOptions {
        preDexLibraries = preDexEnabled
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }

    lintOptions {
        lintConfig file('../analysis/lint/lint.xml')
        htmlOutput file("$project.buildDir/reports/lint/lint-reports.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-reports.xml")
        abortOnError false
    }


    kotlinOptions {
        jvmTarget = "1.8"
    }

}

// Required for annotation processing plugins like Dagger
kapt {
    generateStubs = true
}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    //AndroidX
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.appcompat:appcompat:$androidXAppCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidXConstraintVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.1'

    // GSON
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //Room
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"

    //Koin
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"
    implementation "org.koin:koin-android:2.0.1"

    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.3'

    implementation 'com.github.vipulasri:timelineview:1.1.4'

    //Mapbox
    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:9.0.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-markerview-v9:0.4.0'

    implementation "android.arch.work:work-runtime-ktx:1.0.1"
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'

    implementation 'com.riningan.retrofit2:converter-csv:1.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.9.9'

}

//dependencies {
//    implementation 'com.google.android.material:material:+'
//    implementation 'androidx.constraintlayout:constraintlayout:+'
//    implementation 'androidx.vectordrawable:vectordrawable:+'
//    implementation 'androidx.navigation:navigation-fragment:+'
//    implementation 'androidx.navigation:navigation-ui:+'
//    implementation 'androidx.lifecycle:lifecycle-extensions:+'
//    implementation 'androidx.navigation:navigation-fragment-ktx:+'
//    implementation 'androidx.navigation:navigation-ui-ktx:+'
//}
